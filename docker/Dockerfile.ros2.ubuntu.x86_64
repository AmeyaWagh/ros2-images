ARG base
FROM ${base}

ARG ROS_DISTRO
# Ref: https://docs.ros.org/en/foxy/Installation/Ubuntu-Development-Setup.html

# setup timezone
RUN echo 'Etc/UTC' > /etc/timezone && \
    ln -s /usr/share/zoneinfo/Etc/UTC /etc/localtime && \
    apt-get update && \
    apt-get install -q -y --no-install-recommends tzdata && \
    rm -rf /var/lib/apt/lists/*

RUN apt-get update && apt-get install -y curl locales && \
    locale-gen en_US en_US.UTF-8 && \
    update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
ENV LANG=en_US.UTF-8

#Add the ROS 2 apt repository
ARG OS_CODE_NAME
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key  -o /usr/share/keyrings/ros-archive-keyring.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu ${OS_CODE_NAME} main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null

RUN apt-get update && apt-get install -q -y --no-install-recommends \
    build-essential \
    cmake \
    git \
    qtbase5-dev \
    libbullet-dev \
    python3-colcon-common-extensions \
    python3-flake8 \
    python3-pip \
    python3-pytest-cov \
    python3-rosdep \
    python3-setuptools \
    python3-vcstool \
    git \
    bash-completion \
    wget && \
    # install some pip packages needed for testing
    python3 -m pip install -U \
    argcomplete \
    flake8-blind-except \
    flake8-builtins \
    flake8-class-newline \
    flake8-comprehensions \
    flake8-deprecated \
    flake8-docstrings \
    flake8-import-order \
    flake8-quotes \
    pytest-repeat \
    pytest-rerunfailures \
    pytest && \
    # install Fast-RTPS dependencies
    apt-get install --no-install-recommends -y -q \
    libasio-dev \
    libtinyxml2-dev && \
    # install Cyclone DDS dependencies
    apt-get install --no-install-recommends -y -q \
    libcunit1-dev && rm -rf /var/lib/apt/lists/*

RUN mkdir -p /opt/ros/$ROS_DISTRO/src && \
    wget https://raw.githubusercontent.com/ros2/ros2/foxy/ros2.repos && vcs import /opt/ros/$ROS_DISTRO/src < ros2.repos

RUN rosdep init
# ToDo custom rosdep rules
RUN rosdep update && \
    apt-get update && \
    rosdep install -y \ 
    --from-paths /opt/ros/$ROS_DISTRO/src \
    --ignore-src \
    --skip-keys "fastcdr rti-connext-dds-5.3.1 urdfdom_headers" && \ 
    colcon build --symlink-install

# setup entrypoint
COPY ./docker/ros_entrypoint.sh /

ENTRYPOINT ["/ros_entrypoint.sh"]
CMD ["bash"]